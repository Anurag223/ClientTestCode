/// <summary>
/// Schlumberger Private
/// Copyright 2018 Schlumberger.All rights reserved in Schlumberger
/// authored and generated code(including the selection and arrangement of
/// the source code base regardless of the authorship of individual files),
/// but not including any copyright interest(s) owned by a third party
/// related to source code or object code authored or generated by
/// non-Schlumberger personnel.
/// This source code includes Schlumberger confidential and/or proprietary
/// information and may include Schlumberger trade secrets.Any use,
/// disclosure and/or reproduction is prohibited unless authorized in
/// writing.
/// </summary>

using FMP.Model.LayoutDataModel;
using FMP.Model.UserProfileDataModel;
using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;

namespace FMP.Repository.Layout.Interface
{
    /// <summary>
    /// Layout Interface
    /// </summary>
    public interface ILayoutRepository
    {
        /// <summary>
        /// Returns All Layouts
        /// </summary>
        /// <returns></returns>
        Task<List<Model.LayoutDataModel.Layout>> GetLayouts();

        /// <summary>
        /// Get Layout List
        /// </summary>
        /// <param name="LDAP"></param>
        /// <param name="applicationName"></param>
        /// <returns></returns>
        Task<List<FMP.Model.LayoutDataModel.Layout>> GetLayouts(string LDAP, string applicationName);

        /// <summary>
        /// Get Public Layouts
        /// </summary>
        /// <param name="ldap"></param>
        /// <param name="applicationName"></param>
        /// <returns></returns>
        Task<List<Model.LayoutDataModel.Layout>> GetPublicLayouts(string ldap, string applicationName);

        /// <summary>
        /// Insert Layout
        /// </summary>
        /// <param name="Layout"></param>
        /// <returns></returns>
        Task<int> InsertLayout(FMP.Model.LayoutDataModel.Layout Layout);

        /// <summary>
        /// Update Layout
        /// </summary>
        /// <param name="Layout"></param>
        /// <returns></returns>
        Task<bool> UpdateLayout(FMP.Model.LayoutDataModel.Layout Layout);

        /// <summary>
        /// Update Active Layout
        /// </summary>
        /// <param name="activeLayoutRequest"></param>
        /// <returns></returns>
        Task<bool> UpdateActiveLayout(UserActiveLayoutRequestData activeLayoutRequest);

        /// <summary>
        /// Insert Active Layout
        /// </summary>
        /// <param name="userProfileRequestData"></param>
        /// <returns></returns>
        Task<bool> InsertActiveLayout(UserActiveLayoutRequestData userProfileRequestData);

        /// <summary>
        /// Delete Layout
        /// </summary>
        /// <param name="LayoutId"></param>
        /// <param name="ldap"></param>
        /// <returns></returns>
        Task<bool> DeleteLayoutByID(int LayoutId, string ldap);

        /// <summary>
        /// Get Active Layout
        /// </summary>
        /// <param name="LDAP"></param>
        /// <param name="applicationName"></param>
        /// <returns></returns>
        Task<UserLayoutPreference> GetActiveLayout(string LDAP, string applicationName);
        
        /// <summary>
        /// Get Public Favorite Layout
        /// </summary>
        /// <param name="LDAP"></param>
        /// <param name="applicationName"></param>
        /// <returns></returns>
        Task<List<int>> GetPublicFavorites(string LDAP, string applicationName);

        /// <summary>
        /// Get Layout By Id
        /// </summary>
        /// <param name="layoutId"></param>
        /// <returns></returns>
        Task<Model.LayoutDataModel.Layout> GetLayoutById(int layoutId);

        /// <summary>
        /// Removes the layout from public favorite list
        /// </summary>
        /// <param name="layoutId"></param>
        /// <returns></returns>
        Task<bool> RemoveLayoutFromPublicFavorites(int layoutId);

        /// <summary>
        /// Find layout by Name.
        /// </summary>
        /// <param name="ldap"></param>
        /// <param name="application"></param>
        /// <param name="layoutName"></param>
        /// <returns></returns>
        Model.LayoutDataModel.Layout GetLayoutByName(string ldap, string application, string layoutName);

        /// <summary>
        /// Add Layout to Favorite Layout list of User
        /// </summary>
        /// <param name="favoriteLayoutRequest"></param>
        /// <returns></returns>
        Task<bool> AddLayoutAsFavorite(FavoriteLayoutRequest favoriteLayoutRequest);

        /// <summary>
        /// Remove Layout from Favorite Layout list of user
        /// </summary>
        /// <param name="favoriteLayoutRequest"></param>
        /// <returns></returns>
        Task<bool> RemoveLayoutAsFavorite(FavoriteLayoutRequest favoriteLayoutRequest);
    }
}
