#region Header

/// <summary>
/// Schlumberger Private
/// Copyright 2018 Schlumberger.All rights reserved in Schlumberger
/// authored and generated code(including the selection and arrangement of
/// the source code base regardless of the authorship of individual files),
/// but not including any copyright interest(s) owned by a third party
/// related to source code or object code authored or generated by
/// non-Schlumberger personnel.
/// This source code includes Schlumberger confidential and/or proprietary
/// information and may include Schlumberger trade secrets.Any use,
/// disclosure and/or reproduction is prohibited unless authorized in
/// writing.
/// </summary>

#endregion

using System;
using FMP.Model.Common;
using MongoDB.Bson;
using MongoDB.Bson.Serialization.Attributes;

namespace FMP.Model.UserProfileDataModel
{
    public class UserProfile
    {
        [BsonIgnore] public static string SystemUserName = "SystemUser";

        public ObjectId _id { get; set; }
        public int ProfileID { get; set; }
        public ObjectId ProfileGuid { get; set; }
        public string UserID { get; set; }
        public string LastApplicationName { get; set; }
        public DateTime CreationTimestamp { get; set; }
        public DateTime LastUpdateTimestamp { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string RoleName { get; set; }
        public string ActiveLocations { get; set; }
        public bool IsActive { get; set; }
        public int RefreshInterval { get; set; }
        public UserPreference SavedPreference { get; set; }

        /// <summary>
        ///     IsAdmin - If user is admin user
        /// </summary>
        [BsonIgnore]
        public bool IsAdmin { get; set; }

        /// <summary>
        ///     IsDeveloper - If user is developer
        /// </summary>
        [BsonIgnore]
        public bool IsDeveloper { get; set; }

        public long LastReleaseNoteDismiss { get; set; }

        public static UserProfile From(string userId)
        {
            return new UserProfile()
            {
                ProfileGuid = ObjectId.GenerateNewId(),
                UserID = userId,
                IsActive = true,
                CreationTimestamp = DateTime.Now,
                LastUpdateTimestamp = DateTime.Now,
            };
        }
    }

    public class UserJsonPatchReleaseNote
    {
        public string ldapAlias { get; set; }
        public PatchJson patchJson { get; set; }
    }
}