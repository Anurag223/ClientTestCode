/// <summary>
/// Schlumberger Private
/// Copyright 2018 Schlumberger.All rights reserved in Schlumberger
/// authored and generated code(including the selection and arrangement of
/// the source code base regardless of the authorship of individual files),
/// but not including any copyright interest(s) owned by a third party
/// related to source code or object code authored or generated by
/// non-Schlumberger personnel.
/// This source code includes Schlumberger confidential and/or proprietary
/// information and may include Schlumberger trade secrets.Any use,
/// disclosure and/or reproduction is prohibited unless authorized in
/// writing.
/// </summary>

using MongoDB.Bson;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace FMP.Model.LayoutDataModel
{
    public static class ApplicationNames
    {
        public static readonly string WorkCenter = "WorkCenter";
        public static readonly string ActivityMonitor = "ActivityMonitor";
        public static readonly string PlanandSchedule = "PlanandSchedule";
    }

    /// <summary>
    /// Layout preferences for layout
    /// </summary>
    public class UserLayoutPreference
    {
        /// <summary>
        /// Id generated by Mongo
        /// </summary>
        public ObjectId _id { get; set; }
        /// <summary>
        /// User ldap
        /// </summary>
        public string UserID { get; set; }
        /// <summary>
        /// Application Name
        /// </summary>
        public string ApplicationName { get; set; }
        /// <summary>
        /// Active Layout Id
        /// </summary>
        public int ActiveLayoutID { get; set; }
        /// <summary>
        /// List of Public Layouts
        /// </summary>
        public List<int>  PublicFavorites { get; set; }

        public static UserLayoutPreference CreateFrom(
            string userId,
            string application,
            int layoutId)
        {
          
            return new UserLayoutPreference()
            {
                UserID = userId,
                ApplicationName = application,
                ActiveLayoutID = layoutId
            };
        }
    }

    public class UserLayoutPreferenceBuilder
    {
        private string _application;
        private string _userId;
        private IEnumerable<Layout> _layouts;
        public const string ActivityMonitor_SupplyView = "Supply View";

        private UserLayoutPreferenceBuilder()
        {

        }
        public static UserLayoutPreferenceBuilder CreateNew()
        {
            return new UserLayoutPreferenceBuilder();
        }

        public UserLayoutPreferenceBuilder ForApplication(string application)
        {
            _application = application;
            return this;
        }

        public UserLayoutPreferenceBuilder ForUserId(string userId)
        {
            _userId = userId;
            return this;
        }

        public UserLayoutPreferenceBuilder ForLayouts(IEnumerable<Layout> layouts)
        {
            _layouts = layouts;
            return this;
        }

        public UserLayoutPreference Build()
        {
            int activeLayoutId;

            if (_application == ApplicationNames.WorkCenter)
            {
                activeLayoutId = 1;
            }
            else if (_application == ApplicationNames.ActivityMonitor)
            {
                if (_layouts == null) activeLayoutId = 2;
                else
                {
                    var supplyViewLayout = _layouts.FirstOrDefault(s =>
                        s.LayoutName.Equals(ActivityMonitor_SupplyView, StringComparison.InvariantCultureIgnoreCase));

                    activeLayoutId = supplyViewLayout?.LayoutID ?? 2;
                }
            }
            else
            {
                activeLayoutId = 3;
                _application = ApplicationNames.PlanandSchedule;
            }

            return new UserLayoutPreference()
            {
                UserID = _userId,
                ActiveLayoutID = activeLayoutId,
                ApplicationName = _application
                
            };
        }
    }
}
