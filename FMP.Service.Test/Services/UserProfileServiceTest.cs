/// <summary>
/// Schlumberger Private
/// Copyright 2018 Schlumberger.All rights reserved in Schlumberger
/// authored and generated code(including the selection and arrangement of
/// the source code base regardless of the authorship of individual files),
/// but not including any copyright interest(s) owned by a third party
/// related to source code or object code authored or generated by
/// non-Schlumberger personnel.
/// This source code includes Schlumberger confidential and/or proprietary
/// information and may include Schlumberger trade secrets.Any use,
/// disclosure and/or reproduction is prohibited unless authorized in
/// writing.
/// </summary>


#region namespace

using System;
using FluentAssertions;
using FMP.Model.LayoutDataModel;
using FMP.Model.UserProfileDataModel;
using FMP.Repository.UserProfile.Interface;
using FMP.Service.UserProfile;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Moq;
using System.Collections.Generic;
using System.Threading.Tasks;
#endregion


namespace FMP.Service.Test.Services
{
    [TestClass]
    public class UserProfileServiceTest
    {
        protected MockRepository mockRepository;
        protected Mock<IUserProfileRepository> mockUserProfileRepository;

        [TestInitialize]
        public void TestInitialize()
        {
            //Create Mocks
            mockRepository = new MockRepository(MockBehavior.Strict);
            mockUserProfileRepository = mockRepository.Create<IUserProfileRepository>();
        }

        [TestCleanup]
        public void TestCleanup()
        {
            mockRepository.VerifyAll();
        }

        /// <summary>
        /// setup mock SearchFavoritesService dependencies.
        /// </summary>
        /// <returns></returns>
        private UserProfileService UserProfileService()
        {
            return new UserProfileService(
                mockUserProfileRepository.Object,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null);
        }
    }
}
