/* Schlumberger Private
Copyright 2018 Schlumberger.  All rights reserved in Schlumberger
authored and generated code (including the selection and arrangement of
the source code base regardless of the authorship of individual files),
but not including any copyright interest(s) owned by a third party
related to source code or object code authored or generated by
non-Schlumberger personnel.

This source code includes Schlumberger confidential and/or proprietary
information and may include Schlumberger trade secrets. Any use,
disclosure and/or reproduction is prohibited unless authorized in
writing. */
import { NgModule } from '@angular/core';
import { Routes, RouterModule } from '@angular/router';


import { HistorianProvisionComponent } from './historianutil/historianprovision.component';
import { RouteConfigPaths } from '../../../Constants/helpers';
import { FMPAuthGuard } from '../../base/helpers/Guard/fmpauth.guard';
import { DashboardComponent } from './dashboard/dashboard.component';
import { ClassificationComponent } from './classification/classification.component';
import { EquipmentHealthComponent } from './equipmenthealth/equipmenthealth.component';
import { StandardWorkComponent } from './standardwork/standardwork.component';
import { EpisodeBrowserComponent } from './episode/episodebrowser.component';
import { EpicV3Component } from './epicv3browser/epicV3.component';
import { ScheduleradminComponent } from './scheduleradmin/scheduleradmin.component';
import { HistorianManagementComponent } from './historianmanagement/historianmanagement.component';
import { ConflictManagementComponent } from './conflictmanagment/conflictmanagement.component';
import { AddschedulerjobComponent } from './scheduleradmin/addschedulerjob/addschedulerjob.component';
import { UpdateschedulerjobComponent } from './scheduleradmin/updateschedulerjob/updateschedulerjob.component';
import { AuditLogComponent } from './auditlogging/auditlogging.component';
import { ChannelDefinitionComponent } from './channeldefinition/channeldefinition.component';
import { ChannelDefinitionUtilComponent } from './channeldefinitionutil/channeldefinitionutil.component';

const routes: Routes = [
    {
        path: RouteConfigPaths.Dashboard.name,
        component: DashboardComponent,
        canActivate: [FMPAuthGuard],
        canLoad: [FMPAuthGuard],
        data: { breadcrumb: 'Dashboard' }
    },
    {
        path: RouteConfigPaths.ClassificationEditor.name,
        component: ClassificationComponent,
        canActivate: [FMPAuthGuard],
        canLoad: [FMPAuthGuard],
        data: { breadcrumb: 'Class System Editor' },
    },   
    {
        path: RouteConfigPaths.EpicV3Browser.name,
        component: EpicV3Component,
        canActivate: [FMPAuthGuard],
        canLoad: [FMPAuthGuard],
        data: { breadcrumb: 'Epic v3 Browser' },
    },
    {
        path: RouteConfigPaths.HistorianProvision.name,
        component: HistorianProvisionComponent,
        canActivate: [FMPAuthGuard],
        canLoad: [FMPAuthGuard],
        data: { breadcrumb: 'Historian DB Provisioning' },
    },
    {
        path: RouteConfigPaths.EpisodeBrowser.name,
        component: EpisodeBrowserComponent,
        canActivate: [FMPAuthGuard],
        canLoad: [FMPAuthGuard],
        data: { breadcrumb: 'Episode Browser' },
    },
    {
        path: RouteConfigPaths.EquipmentHealth.name,
        component: EquipmentHealthComponent,
        canActivate: [FMPAuthGuard],
        canLoad: [FMPAuthGuard],
        data: { breadcrumb: 'Equipment Health Monitor' },
    },
    {
        path: RouteConfigPaths.StandardWork.name,
        component: StandardWorkComponent,
        canActivate: [FMPAuthGuard],
        canLoad: [FMPAuthGuard],
        data: { breadcrumb: 'Standard Work Utils' },
    },
    {
        path: RouteConfigPaths.SchedulerAdmin.name,
        component: ScheduleradminComponent,
        canActivate: [FMPAuthGuard],
        canLoad: [FMPAuthGuard],
        data: { breadcrumb: 'Scheduler Admin' },
    },
    {
        path: RouteConfigPaths.AddSchedulerJob.name,
        component: AddschedulerjobComponent,
        canActivate: [FMPAuthGuard],
        canLoad: [FMPAuthGuard],
        data: { breadcrumb: 'Add Scheduler Job' },
    },
    {
        path: RouteConfigPaths.UpdateSchedulerJob.name,
        component: UpdateschedulerjobComponent,
        canActivate: [FMPAuthGuard],
        canLoad: [FMPAuthGuard],
        data: { breadcrumb: 'Add/Update Scheduler Job' },
    },
    {
        path: RouteConfigPaths.HistorianManagement.name,
        component: HistorianManagementComponent,
        canActivate: [FMPAuthGuard],
        canLoad: [FMPAuthGuard],
        data: { breadcrumb: 'Manage HistorianDB' },
    },
    {
        path: RouteConfigPaths.ConflictManagement.name,
        component: ConflictManagementComponent,
        canActivate: [FMPAuthGuard],
        canLoad: [FMPAuthGuard],
        data: { breadcrumb: 'Conflict Management' },
    },
    {
        path: RouteConfigPaths.AuditLog.name,
        component: AuditLogComponent,
        canActivate: [FMPAuthGuard],
        canLoad: [FMPAuthGuard],
        data: { breadcrumb: 'Audit Logs' },
    },
    {
        path: RouteConfigPaths.ChannelDefinition.name,
        component: ChannelDefinitionComponent,
        canActivate: [FMPAuthGuard],
        canLoad: [FMPAuthGuard],
        data: { breadcrumb: 'ChannelDefinition' },
    },
    {
        path: RouteConfigPaths.ChannelDefinitionAdmin.name,
        component: ChannelDefinitionUtilComponent,
        canActivate: [FMPAuthGuard],
        canLoad: [FMPAuthGuard],
        data: { breadcrumb: 'ChannelDefinitionAdmin' },
    }
];

@NgModule({
  imports: [RouterModule.forChild(routes)],
  exports: [RouterModule],
})
export class TlmUtilsRoutingModule {}
