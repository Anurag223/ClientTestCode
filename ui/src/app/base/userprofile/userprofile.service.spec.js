"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/* Schlumberger Private
Copyright 2018 Schlumberger.  All rights reserved in Schlumberger
authored and generated code (including the selection and arrangement of
the source code base regardless of the authorship of individual files),
but not including any copyright interest(s) owned by a third party
related to source code or object code authored or generated by
non-Schlumberger personnel.

This source code includes Schlumberger confidential and/or proprietary
information and may include Schlumberger trade secrets. Any use,
disclosure and/or reproduction is prohibited unless authorized in
writing. */
var testing_1 = require("@angular/core/testing");
var userprofile_service_1 = require("./userprofile.service");
var http_1 = require("@angular/common/http");
describe('UserprofileService', function () {
    beforeEach(function () {
        testing_1.TestBed.configureTestingModule({
            imports: [
                http_1.HttpClientModule
            ],
            providers: [userprofile_service_1.UserprofileService]
        });
    });
    it('should be created', testing_1.inject([userprofile_service_1.UserprofileService], function (service) {
        expect(service).toBeTruthy();
    }));
    //   it('should get the Ldap of current User', inject([UserprofileService], (service: UserprofileService) => {
    //     let result = service.getCurrentUserLdap();
    //     expect(result).not.toBeNull();
    // }));
    // it('should get the list of selected Transaction Sites', inject([UserprofileService], (service: UserprofileService) => {
    //   let result = service.getCurrentTransSite();
    //   expect(result).not.toBeNull();
    // }));
    // it('should Set the list of selected Transaction Sites', inject([UserprofileService], (service: UserprofileService) => {
    //   var selSites:string[]=[];
    //   selSites.push("NGCTLM");
    //   service.setCurrentTransSite(selSites);
    //   let result = service.getCurrentTransSite();
    //   expect(result).toEqual(selSites);
    // }));
});
//# sourceMappingURL=userprofile.service.spec.js.map