/// <summary>
/// Schlumberger Private
/// Copyright 2018 Schlumberger.All rights reserved in Schlumberger
/// authored and generated code(including the selection and arrangement of
/// the source code base regardless of the authorship of individual files),
/// but not including any copyright interest(s) owned by a third party
/// related to source code or object code authored or generated by
/// non-Schlumberger personnel.
/// This source code includes Schlumberger confidential and/or proprietary
/// information and may include Schlumberger trade secrets.Any use,
/// disclosure and/or reproduction is prohibited unless authorized in
/// writing.
/// </summary>

#region namespace
using FluentAssertions;

using FMP.Model.WorkStationDataModel;
using FMP.Repository.WorkStationAttribute;
using FMP.Repository.WorkStationAttribute.Interface;
using FMP.Repository.Interface;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using MongoDB.Driver;
using Moq;
using System;
using System.Collections.Generic;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
#endregion
namespace FMP.Repository.Test.Repository
{
    [TestClass]
    public class ActionAndAttributeRepositoryTest
    {
        protected MockRepository mockRepository;
        protected Mock<IWorkStationRepository> mockActionAndAttributeRepository;
        protected Mock<IFMPContext> mockActionandAttributeContext;

        [TestInitialize]
        public void TestInitialize()
        {
            //Create Mocks
            this.mockRepository = new MockRepository(MockBehavior.Strict);
            mockActionandAttributeContext = mockRepository.Create<IFMPContext>();
            this.mockActionAndAttributeRepository = this.mockRepository.Create<IWorkStationRepository>();
        }

        [TestCleanup]
        public void TestCleanup()
        {
            //this.mockRepository.VerifyAll();
        }

        /// <summary>
        /// GetTest to Unit test ActionAndAttribute Repository Methods
        /// </summary>
        [TestClass]
        public class GetTest: ActionAndAttributeRepositoryTest
        {
            #region Test Method

            /// <summary>
            /// Unit test UpdateEventAsync Return Boolean flag true
            /// </summary>
            /// <returns>true</returns>
       
            #endregion

            private ActionAndAttributeRepository ActionAndAttributeRepository()
            {
                return new ActionAndAttributeRepository(
                    mockActionandAttributeContext.Object
                   );
            }
        }
    }
}
