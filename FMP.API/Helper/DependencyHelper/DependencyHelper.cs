#region Header

/// <summary>
/// Schlumberger Private
/// Copyright 2018 Schlumberger.All rights reserved in Schlumberger
/// authored and generated code(including the selection and arrangement of
/// the source code base regardless of the authorship of individual files),
/// but not including any copyright interest(s) owned by a third party
/// related to source code or object code authored or generated by
/// non-Schlumberger personnel.
/// This source code includes Schlumberger confidential and/or proprietary
/// information and may include Schlumberger trade secrets.Any use,
/// disclosure and/or reproduction is prohibited unless authorized in
/// writing.
/// </summary>

#endregion

using FMP.API.Security;
using FMP.Model.Common;
using FMP.Repository.Context;
using FMP.Repository.Counter;
using FMP.Repository.Counter.Interface;
using FMP.Repository.Interface;
using FMP.Service;
using FMP.Service.Delfi;
using FMP.Service.Ehc;
using FMP.Service.Layout;
using FMP.Service.Mateo;
using FMP.Service.User;
using FMP.Service.UserProfile;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;

namespace FMP.API.Helper.DependencyHelper
{
    public static class DependencyHelper
    {
        public static void RegisterDBConfiguration(IConfiguration config, IServiceCollection services)
        {
            //MongoDB connection string
            services.Configure<Settings>(settings =>
            {
                settings.ConnectionString = config.GetSection("MongoConnection:ConnectionString").Value;
                settings.Database = config.GetSection("MongoConnection:Database").Value;
            });
            // Use only FMPContext for DB connection.
            services.AddSingleton<IFMPContext, FMPContext>();
        }

        public static void RegisterRepositories(IServiceCollection services)
        {
            //services.AddSingleton<IHttpContextAccessor, HttpContextAccessor>();            

            services.AddSingleton<ICounterRepository, CounterRepository>();

        }

        public static void RegisterServices(IServiceCollection services)
        {
            //this should be singleton through application
            services.AddSingleton<IMongoDbClient, MongoDbClient>();
            UserProfileServicesModule.Register(services);

            LayoutServicesModule.Register(services);
            UserServicesModule.Register(services);
    
            MateoModule.Register(services);
            EhcModule.Register(services);
            DelfiModule.Register(services);
  
            services.AddTransient<IIdentityService, IdentityService>();
  
        }
    }
}