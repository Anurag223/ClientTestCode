#region Header

/// <summary>
/// Schlumberger Private
/// Copyright 2018 Schlumberger.All rights reserved in Schlumberger
/// authored and generated code(including the selection and arrangement of
/// the source code base regardless of the authorship of individual files),
/// but not including any copyright interest(s) owned by a third party
/// related to source code or object code authored or generated by
/// non-Schlumberger personnel.
/// This source code includes Schlumberger confidential and/or proprietary
/// information and may include Schlumberger trade secrets.Any use,
/// disclosure and/or reproduction is prohibited unless authorized in
/// writing.
/// </summary>

#endregion

#pragma warning disable 1591

using System.Threading.Tasks;
using MongoDB.Driver;

#pragma warning disable 1591

namespace FMP.Service
{
    public abstract class KeyGenerator<T> : IKeyGenerator<T>
    {
        private readonly IMongoDbCollection<T> _collection;

        protected KeyGenerator(IMongoDbCollection<T> collection)
        {
            _collection = collection;
        }

        public async Task Generate(T entity)
        {
            var options = new FindOptions<T, T>
            {
                Limit = 1,
                Sort = Sort()
            };

            var max = (await _collection.Collection.FindAsync(FilterDefinition<T>.Empty, options)).FirstOrDefault();

            SetID(max, entity);
        }

        protected abstract void SetID(T maxEntity, T newEntity);

        protected abstract SortDefinition<T> Sort();
    }
}