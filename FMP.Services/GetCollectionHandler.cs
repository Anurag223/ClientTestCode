#region Header

/// <summary>
/// Schlumberger Private
/// Copyright 2018 Schlumberger.All rights reserved in Schlumberger
/// authored and generated code(including the selection and arrangement of
/// the source code base regardless of the authorship of individual files),
/// but not including any copyright interest(s) owned by a third party
/// related to source code or object code authored or generated by
/// non-Schlumberger personnel.
/// This source code includes Schlumberger confidential and/or proprietary
/// information and may include Schlumberger trade secrets.Any use,
/// disclosure and/or reproduction is prohibited unless authorized in
/// writing.
/// </summary>

#endregion

#pragma warning disable 1591

using System.Collections.Generic;
using System.Threading.Tasks;
using MongoDB.Driver;

namespace FMP.Service
{
    public class GetCollectionHandler<T> :
        HandlerBase<T>,
        IQueryHandler<IQuery<T>, IReadOnlyList<T>> where T : class
    {
        public GetCollectionHandler(IMongoDbCollection<T> userProfiles) :
            base(userProfiles)
        {
        }

        public async Task<IReadOnlyList<T>> Handle(IQuery<T> query)
        {
            var profile = await Collection.Find(
                query.FilterDefinition()
            ).ToListAsync();

            return profile;
        }
    }

    public class GetListHandler<T> :
        HandlerBase<T>,
        IQueryHandler<IQuery<T>, List<T>> where T : class
    {
        public GetListHandler(IMongoDbCollection<T> userProfiles) :
            base(userProfiles)
        {
        }

        public async Task<List<T>> Handle(IQuery<T> query)
        {
            var profile = await Collection.Find(
                query.FilterDefinition()
            ).ToListAsync();

            return profile;
        }
    }
}