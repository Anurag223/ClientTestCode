/// <summary>
/// Schlumberger Private
/// Copyright 2018 Schlumberger.All rights reserved in Schlumberger
/// authored and generated code(including the selection and arrangement of
/// the source code base regardless of the authorship of individual files),
/// but not including any copyright interest(s) owned by a third party
/// related to source code or object code authored or generated by
/// non-Schlumberger personnel.
/// This source code includes Schlumberger confidential and/or proprietary
/// information and may include Schlumberger trade secrets.Any use,
/// disclosure and/or reproduction is prohibited unless authorized in
/// writing.
/// </summary>
using FMP.Model.LayoutDataModel;
using FMP.Model.UserProfileDataModel;
using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;

namespace FMP.Service.Layout.Interface
{
    /// <summary>
    /// Layout Service Interface
    /// </summary>
    public interface ILayoutService
    {
        /// <summary>
        /// Get Layout List
        /// </summary>
        /// <param name="LDAP"></param>
        /// <param name="applicationName"></param>
        /// <returns></returns>
        Task<ColumnOptionData> GetLayouts(string LDAP, string applicationName);

        /// <summary>
        /// Get Public Layouts
        /// </summary>
        /// <param name="ldap"></param>
        /// <param name="applicationName"></param>
        /// <returns></returns>
        Task<List<Model.LayoutDataModel.Layout>> GetPublicLayouts(string ldap, string applicationName);

        /// <summary>
        /// Update Active Layout
        /// </summary>
        /// <param name="activeLayoutRequest"></param>
        /// <returns></returns>
        Task<bool> UpdateActiveLayout(UserActiveLayoutRequestData activeLayoutRequest);

        /// <summary>
        /// Delete Layout
        /// </summary>
        /// <param name="LayoutId"></param>
        /// <param name="ldap"></param>
        /// <returns></returns>
        Task<bool> DeleteLayoutById(int LayoutId, string ldap);

        /// <summary>
        /// Delete Layout
        /// </summary>
        /// <param name="layoutId"></param>
        /// <returns></returns>
        Task<bool> RemoveLayout(int layoutId);

        /// <summary>
        /// Inserts/updates Layout
        /// </summary>
        /// <param name="userProfileRequestData"></param>
        /// <returns></returns>
        Task<int> SaveLayout(UserProfileRequestData userProfileRequestData);

        /// <summary>
        /// Updates favorite layout
        /// </summary>
        /// <param name="favoriteLayoutRequest"></param>
        /// <returns></returns>
        Task<bool> UpdateLayoutPatch(FavoriteLayoutRequest favoriteLayoutRequest);
    }
}
