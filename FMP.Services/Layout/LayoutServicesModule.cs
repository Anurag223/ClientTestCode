#region Header

/// <summary>
/// Schlumberger Private
/// Copyright 2018 Schlumberger.All rights reserved in Schlumberger
/// authored and generated code(including the selection and arrangement of
/// the source code base regardless of the authorship of individual files),
/// but not including any copyright interest(s) owned by a third party
/// related to source code or object code authored or generated by
/// non-Schlumberger personnel.
/// This source code includes Schlumberger confidential and/or proprietary
/// information and may include Schlumberger trade secrets.Any use,
/// disclosure and/or reproduction is prohibited unless authorized in
/// writing.
/// </summary>

#endregion

#pragma warning disable 1591

using System.Collections.Generic;
using FMP.Repository;
using FMP.Repository.Layout.Interface;
using FMP.Service.Layout.Interface;
using Microsoft.Extensions.DependencyInjection;
using FMPLayout = FMP.Model.LayoutDataModel.Layout;

namespace FMP.Service.Layout
{
    public static class LayoutServicesModule
    {
        public static void Register(IServiceCollection services)
        {
            services.AddSingleton<ILayoutRepository, LayoutRepository>();
            services.AddTransient<ILayoutService, LayoutService>();
            services.AddTransient<IMongoDbCollection<FMPLayout>, MongoDbCollection<FMPLayout>>();

            services.AddTransient<IKeyGenerator<FMPLayout>, LayoutKeyGenerator>();

            services.AddTransient<IQueryHandler<IQuery<FMPLayout>, IReadOnlyList<FMPLayout>>, GetCollectionHandler<FMPLayout>>();
            services.AddTransient<IQueryHandler<IQuery<FMPLayout>, FMPLayout>, GetHandler<FMPLayout>>();

            services.AddTransient<ICommandHandler<ICreateCommand<FMPLayout>>, CreateEntityHandler<FMPLayout>>();

            services.AddTransient<ICommandHandler<IUpdateCommand<FMPLayout>>, UpdateEntityHandler<FMPLayout>>();

            services.AddTransient<ICommandHandler<IDeleteCommand<FMPLayout>>, DeleteEntityHandler<FMPLayout>>();
        }
    }
}