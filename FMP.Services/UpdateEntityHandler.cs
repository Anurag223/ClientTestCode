#region Header

/// <summary>
/// Schlumberger Private
/// Copyright 2018 Schlumberger.All rights reserved in Schlumberger
/// authored and generated code(including the selection and arrangement of
/// the source code base regardless of the authorship of individual files),
/// but not including any copyright interest(s) owned by a third party
/// related to source code or object code authored or generated by
/// non-Schlumberger personnel.
/// This source code includes Schlumberger confidential and/or proprietary
/// information and may include Schlumberger trade secrets.Any use,
/// disclosure and/or reproduction is prohibited unless authorized in
/// writing.
/// </summary>

#endregion

#pragma warning disable 1591

using System.Threading.Tasks;
using MongoDB.Driver;

#pragma warning disable 1591

namespace FMP.Service
{
    public class UpdateEntityHandler<T> :
        HandlerBase<T>,
        ICommandHandler<IUpdateCommand<T>> where T : class
    {
        public UpdateEntityHandler(IMongoDbCollection<T> userProfiles) :
            base(userProfiles)
        {
        }

        public async Task<bool> Handle(IUpdateCommand<T> command)
        {
            if (!command.IsValid()) return false;

            var filter = command.FilterDefinition();
            var underStatement = command.UpdateDefinition();

            UpdateResult actionResult;
            if (command.IsManyUpdate)
                actionResult = await Collection
                    .UpdateManyAsync(filter, underStatement, new UpdateOptions {IsUpsert = true});
            else
                actionResult = await Collection
                    .UpdateOneAsync(filter, underStatement, new UpdateOptions {IsUpsert = true});

            return actionResult.IsSuccess();
        }
    }
}