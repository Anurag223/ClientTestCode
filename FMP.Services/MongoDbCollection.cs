#region Header

/// <summary>
/// Schlumberger Private
/// Copyright 2018 Schlumberger.All rights reserved in Schlumberger
/// authored and generated code(including the selection and arrangement of
/// the source code base regardless of the authorship of individual files),
/// but not including any copyright interest(s) owned by a third party
/// related to source code or object code authored or generated by
/// non-Schlumberger personnel.
/// This source code includes Schlumberger confidential and/or proprietary
/// information and may include Schlumberger trade secrets.Any use,
/// disclosure and/or reproduction is prohibited unless authorized in
/// writing.
/// </summary>

#endregion
#pragma warning disable 1591

using System.Reflection;
using FMP.Model;
using MongoDB.Driver;

namespace FMP.Service
{
    public class MongoDbCollection<T> : IMongoDbCollection<T>
    {
        private readonly IMongoDbClient _mongoDbClient;

        public MongoDbCollection(IMongoDbClient mongoDbClient)
        {
            _mongoDbClient = mongoDbClient;
        }
        public IMongoCollection<T> Collection => GetCollection();

        public string GetCollectionName()
        {
            if (typeof(T).IsGenericType)
            {
                return typeof(T).GetGenericArguments()[0].Name;
            }

            var la = typeof(T).GetCustomAttribute<CollectionNameAttribute>();

            return la != null ? la.Name : typeof(T).Name;
        }


        public IMongoCollection<T> GetCollection() => _mongoDbClient.Database.GetCollection<T>(GetCollectionName());
    }
}